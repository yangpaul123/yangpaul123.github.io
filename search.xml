<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>OpenCV学习</title>
      <link href="/yangpaul123.github.io/2021/04/01/OpenCV%E5%AD%A6%E4%B9%A0/"/>
      <url>/yangpaul123.github.io/2021/04/01/OpenCV%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-OpenCV简介"><a href="#1-OpenCV简介" class="headerlink" title="1.OpenCV简介"></a>1.OpenCV简介</h2><h3 id="1-1-图像处理简介"><a href="#1-1-图像处理简介" class="headerlink" title="1.1 图像处理简介"></a>1.1 图像处理简介</h3><p>​           早期是模拟图像，如今已经全部发展成数字图像了。</p><h3 id="1-2-数字图像表示"><a href="#1-2-数字图像表示" class="headerlink" title="1.2 数字图像表示"></a>1.2 数字图像表示</h3><p>​          平常接触的8位数图像，即每个像素点含有的灰度范围为0到2的8次方，即0到255。0是最黑。</p><p><img src="https://i.loli.net/2021/04/01/cakwVeyhbBrx2Qo.png"></p><h3 id="1-3-图像彩色图分类。"><a href="#1-3-图像彩色图分类。" class="headerlink" title="1.3 图像彩色图分类。"></a>1.3 图像彩色图分类。</h3><p>​        二值图像：像素点形成的二维矩阵只有0和1，0是黑色。</p><p>​        灰度图：像素点的采样的位数决定有多少级灰度。</p><p>​        彩色图：每个像素由RGB（红绿蓝）三个分量来表示，分量介于（0，255）</p><p>​        </p><h3 id="1-4-OpenCV简介与安装"><a href="#1-4-OpenCV简介与安装" class="headerlink" title="1.4 OpenCV简介与安装"></a>1.4 OpenCV简介与安装</h3><p>​            <img src="https://i.loli.net/2021/04/01/psQKrRkmLw6cGC5.png"></p><p>​                 安装numpy ，matplotlib</p><h3 id="1-5-OpenCV的模块"><a href="#1-5-OpenCV的模块" class="headerlink" title="1.5 OpenCV的模块"></a>1.5 OpenCV的模块</h3><p><img src="https://i.loli.net/2021/04/01/Yx8LOJioqaNUp4Z.png"></p><h2 id="2-1-OpenCV图片操作"><a href="#2-1-OpenCV图片操作" class="headerlink" title="2.1 OpenCV图片操作"></a>2.1 OpenCV图片操作</h2><h3 id="1-图像的IO操作"><a href="#1-图像的IO操作" class="headerlink" title="1.图像的IO操作"></a>1.图像的IO操作</h3><h4 id="1-1-读取图像"><a href="#1-1-读取图像" class="headerlink" title="1.1 读取图像"></a>1.1 读取图像</h4><p>​        1.API    </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.imread()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/wGrlXR7ALBFM5TO.png"></p><h4 id="1-2-显示图像"><a href="#1-2-显示图像" class="headerlink" title="1.2 显示图像"></a>1.2 显示图像</h4><p>​            1.API</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.imshow()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/aM9ZjxE7XRW2g5P.png"></p><h4 id="1-3-保存图像"><a href="#1-3-保存图像" class="headerlink" title="1.3 保存图像"></a>1.3 保存图像</h4><p>​        <img src="https://i.loli.net/2021/04/01/J1GIacLrARj6UT2.png"></p><h3 id="2-绘制几何图形"><a href="#2-绘制几何图形" class="headerlink" title="2.绘制几何图形"></a>2.绘制几何图形</h3><h4 id="2-1-绘制直线"><a href="#2-1-绘制直线" class="headerlink" title="2.1 绘制直线"></a>2.1 绘制直线</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.line(img,start,end,color,thickness)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/J94OZ2S5DXhWqPp.png"></p><h4 id="2-2-绘制圆形"><a href="#2-2-绘制圆形" class="headerlink" title="2.2 绘制圆形"></a>2.2 绘制圆形</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.circle(img,centerpoint,r,color,thickness)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/vxhEusHK54XGFqY.png"></p><h4 id="2-3-绘制矩形"><a href="#2-3-绘制矩形" class="headerlink" title="2.3 绘制矩形"></a>2.3 绘制矩形</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">cv.rectangle(img,leftupper,rightdown,color,thickness)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/LMBwT3614uaxSsX.png"></p><h4 id="2-4-向图像中添加文字"><a href="#2-4-向图像中添加文字" class="headerlink" title="2.4 向图像中添加文字"></a>2.4 向图像中添加文字</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.putText(img,text,station,font,fontsize,color,thickness,cv.LINE_AA)</span><br></pre></td></tr></table></figure><h4 id="2-5-图像输出"><a href="#2-5-图像输出" class="headerlink" title="2.5 图像输出"></a>2.5 图像输出</h4><p>  一般在结尾要加上matplotlib的功能语句。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">plt.imshow([:,:,::-<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure><p>在使用此函数时，需要导入库。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot </span><br></pre></td></tr></table></figure><h3 id="3-获取并修改像素点"><a href="#3-获取并修改像素点" class="headerlink" title="3.获取并修改像素点"></a>3.获取并修改像素点</h3><p><img src="https://i.loli.net/2021/04/01/qoOp5jEPYaCcdQL.png"></p><p>​       PS：仅获取蓝色通道的强度，我觉得应该是img[0，0，100]，把红和绿两个通道关闭，只留下蓝色通道</p><h3 id="4-获取图像的属性"><a href="#4-获取图像的属性" class="headerlink" title="4.获取图像的属性"></a>4.获取图像的属性</h3><p><img src="https://i.loli.net/2021/04/01/aRsDuXewxi6Ztkn.png"></p><h3 id="5-图像通道的拆分与合并"><a href="#5-图像通道的拆分与合并" class="headerlink" title="5.图像通道的拆分与合并"></a>5.图像通道的拆分与合并</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#通道拆分</span></span><br><span class="line">b,g,r = cv.split(img)</span><br><span class="line"><span class="comment"># 通道合并</span></span><br><span class="line">img = cv.merge((b,g,r))</span><br><span class="line"><span class="comment">#显示单通道的图像</span></span><br><span class="line">plt.imshow(b,cmap=plt.cm.gray)</span><br><span class="line"><span class="comment">#显示合并后的图像</span></span><br><span class="line">plt.imshow(img2[:,:,::-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="6-色彩空间的转换"><a href="#6-色彩空间的转换" class="headerlink" title="6.色彩空间的转换"></a>6.色彩空间的转换</h3><p>OpenCV最泛用的两种转换：BGR（彩色图）转换为GRAY灰色图，BGR转换为HSV</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.cvtColor(input_image,flag)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/SLFCZxIT8tfK4Rq.png"></p><p>转换成灰度图：</p><p><img src="https://i.loli.net/2021/04/01/8QTCuBDhXEdOmRU.png"></p><p>转换成HSV图：</p><p><img src="https://i.loli.net/2021/04/01/mM83kyjqUSTp46O.png"></p><h2 id="2-2-OpenCV算术操作"><a href="#2-2-OpenCV算术操作" class="headerlink" title="2.2 OpenCV算术操作"></a>2.2 OpenCV算术操作</h2><h3 id="1-图像的加法"><a href="#1-图像的加法" class="headerlink" title="1.图像的加法"></a>1.图像的加法</h3><p>​        一般使用OpenCV的加法运算，OpenCV是饱和运算，当通道级数超过255时，则封顶到255，而numpy中的加法运算是模运算，也就是取余。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.add()</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/VKHDwYeBQtAm8ir.png"></p><p><img src="https://i.loli.net/2021/04/01/Rbvog5ABiEL42xs.png"></p><p>结果：      两个图片的通道数值加在一块，饱和运算</p><p><img src="https://i.loli.net/2021/04/01/XnZkpiFhDK9yAG3.png"></p><h3 id="2-图像的混合"><a href="#2-图像的混合" class="headerlink" title="2.图像的混合"></a>2.图像的混合</h3><p>​        其实也是加法，但两张图的通道权重不同。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.addWeighted(img1,<span class="number">0.7</span>,img2,<span class="number">0.3</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p>​        PS：权重相加必须为1，后面的0可以是其他常数，在两张图片的像素上再加值。</p><h2 id="3-OpenCV图像处理"><a href="#3-OpenCV图像处理" class="headerlink" title="3.OpenCV图像处理"></a>3.OpenCV图像处理</h2><h3 id="1-几何变换"><a href="#1-几何变换" class="headerlink" title="1.几何变换"></a>1.几何变换</h3><h4 id="1-1图像缩放"><a href="#1-1图像缩放" class="headerlink" title="1.1图像缩放"></a>1.1图像缩放</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.resize(src,dsize,fx=<span class="number">0</span>,fy=<span class="number">0</span>,interpolation=cv2.INTER_LINEAR)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/dkgOvT7iY2nhL4D.png"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#绝对尺寸</span></span><br><span class="line">rows,cols=kids.shape[:<span class="number">2</span>]</span><br><span class="line"><span class="comment">#shape的参数有3个，最后一个为通道数</span></span><br></pre></td></tr></table></figure><h5 id="绝对尺寸"><a href="#绝对尺寸" class="headerlink" title="绝对尺寸"></a>绝对尺寸</h5><p> 此代码可以获得行列数，结果如下：</p><p><img src="https://i.loli.net/2021/04/01/5bWGVMhoYR47D6Q.png"></p><p>​        再通过缩放：</p><p><img src="C:\Users\wr\AppData\Roaming\Typora\typora-user-images\image-20210401162058726.png" alt="image-20210401162058726"></p><h5 id="相对尺寸"><a href="#相对尺寸" class="headerlink" title="相对尺寸"></a>相对尺寸</h5><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">res1 = cv.resize(kids,<span class="literal">None</span>,fx=<span class="number">0.5</span>,fy=<span class="number">0.5</span>)</span><br><span class="line">plt.imshow(res1[:,:,::-<span class="number">1</span>])</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/wzd1umckexrgbCH.png"></p><h4 id="2-图像平移"><a href="#2-图像平移" class="headerlink" title="2.图像平移"></a>2.图像平移</h4><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cv.warpAffine(img,M,dsize)</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2021/04/01/VYPaBEK2wpjmSoQ.png"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#图像平移</span></span><br><span class="line">rows,cols = img1.shape[:<span class="number">2</span>]</span><br><span class="line">M = np.float32([<span class="number">1</span>,<span class="number">0</span>,<span class="number">100</span>],[<span class="number">0</span>,<span class="number">1</span>,<span class="number">50</span>])</span><br><span class="line">dst = cv.warpAffine(img1,M,(cols,rows))</span><br></pre></td></tr></table></figure><p>PS：平移函数的第三个参数的是先列在行。</p>]]></content>
      
      
      <categories>
          
          <category> 机器视觉 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Python学习</title>
      <link href="/yangpaul123.github.io/2021/02/22/Python%E5%AD%A6%E4%B9%A0/"/>
      <url>/yangpaul123.github.io/2021/02/22/Python%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<p>​      记录一些Python特殊的语法格式，和C做区分。</p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>XXX项目</title>
      <link href="/yangpaul123.github.io/2021/02/22/XXX%E9%A1%B9%E7%9B%AE/"/>
      <url>/yangpaul123.github.io/2021/02/22/XXX%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<p>​       目前还没有项目，尴尬。</p><p>​        PS：先留个框架。</p>]]></content>
      
      
      <categories>
          
          <category> 项目 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>随心</title>
      <link href="/yangpaul123.github.io/2021/02/22/%E9%9A%8F%E5%BF%83/"/>
      <url>/yangpaul123.github.io/2021/02/22/%E9%9A%8F%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<p>​        记忆的瞬间，留在了此刻。</p>]]></content>
      
      
      <categories>
          
          <category> 记忆闪存 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/yangpaul123.github.io/2021/02/21/hello-world/"/>
      <url>/yangpaul123.github.io/2021/02/21/hello-world/</url>
      
        <content type="html"><![CDATA[<pre><code>   个人博客快要搭建完毕了，虽然说一直都是跟着教程实现了一个又一个功能，但由于失败很多次，整个过程仍然充满着挑战性。然后我也非常明白，目前，我只是在写应用层面，而前端的底层知识我是十分匮乏的。总之，结合自己的发展方向，前端的HTML，JS,CSS三大巨头我会去拓展宽度，但不会增加深度。</code></pre><h2 id="看看了解和学会了什么？"><a href="#看看了解和学会了什么？" class="headerlink" title="看看了解和学会了什么？"></a>看看了解和学会了什么？</h2><h3 id="一、接触到了前端程序员的部分工作内容"><a href="#一、接触到了前端程序员的部分工作内容" class="headerlink" title="一、接触到了前端程序员的部分工作内容"></a>一、接触到了前端程序员的部分工作内容</h3><pre><code>   能理解为什么大多数转码农的会选择前端这个现象了。</code></pre><h3 id="二、了解了域名的购买与学会如何与博客绑定"><a href="#二、了解了域名的购买与学会如何与博客绑定" class="headerlink" title="二、了解了域名的购买与学会如何与博客绑定"></a>二、了解了域名的购买与学会如何与博客绑定</h3><pre><code>   xiaoxiu.me这个域名折腾了大半天，主要还是第一次做这方面的事。</code></pre><p>)</p><h3 id="三、了解了选择IT行业并在这个行业生存所需要具备的特质。"><a href="#三、了解了选择IT行业并在这个行业生存所需要具备的特质。" class="headerlink" title="三、了解了选择IT行业并在这个行业生存所需要具备的特质。"></a>三、了解了选择IT行业并在这个行业生存所需要具备的特质。</h3><pre><code>   如果不想做底层程序员，需要具备时刻学习精神，钻研精神与匠心精神，或者说，这是技术人的职业精神。</code></pre><h2 id="看看有什么心得吧。"><a href="#看看有什么心得吧。" class="headerlink" title="看看有什么心得吧。"></a>看看有什么心得吧。</h2><pre><code>    让我自己惊讶的是，当我在做博客的时候，我的注意力会变得十分集中，一坐就是几个小时，也会因为一些功能的实现而十分有成就感。当然，也会因为失败了N多次而有些烦躁。然后我也并不反感看技术文档（由于水平有限，还有很多技术文档是英文的，有时候会有点吃力。），至少不会像看小说那样看的昏昏欲睡。（可能全天下就我看小说会变困。）    我自己是个懒得要死的人，但在感兴趣的事上，有很强很强的行动力，IT既是我感兴趣的点，又是高薪行业，所以考研转行选择IT应该是改变我人生的关键决策，为了过上自己想要的生活，我向8月份的我敬一杯酒，感谢你长时间的焦虑与思考，虽是一片绿叶，但我已知青山。</code></pre>]]></content>
      
      
      <categories>
          
          <category> 历程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS笔记一</title>
      <link href="/yangpaul123.github.io/2021/02/09/CSS%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
      <url>/yangpaul123.github.io/2021/02/09/CSS%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><h2 id="一、CSS概述"><a href="#一、CSS概述" class="headerlink" title="一、CSS概述"></a>一、CSS概述</h2><h3 id="1、概述："><a href="#1、概述：" class="headerlink" title="1、概述："></a>1、概述：</h3><p>​                层叠样式表，用来美化网页。做到结构(HTML)与表现(CSS)分离。</p><h3 id="2、语法"><a href="#2、语法" class="headerlink" title="2、语法"></a>2、语法</h3><p>​                选择器{</p><p>​                            属性：属性值;</p><p>​                            }                 </p><p>​                <code>PS：W3C规定，语法中的英文字母为小写。</code></p><h3 id="3、CSS的四种引用方式"><a href="#3、CSS的四种引用方式" class="headerlink" title="3、CSS的四种引用方式"></a>3、CSS的四种引用方式</h3><p>​                1.行间样式：直接在标签书写样式。</p><p>​        代码:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;color:olive;witdth:100px;border:1px solid blue;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​                2.内部样式：一般写在<code>&lt;head&gt;</code>标签内。</p><p>​        代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Title<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">      p&#123;</span><br><span class="line"><span class="css">        <span class="selector-tag">background-color</span>: <span class="selector-id">#eeeeee</span>;</span></span><br><span class="line">        font-size: 18px;</span><br><span class="line">        font-style: italic;</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​            PS:这里在Head里定义了P标签的部分设置，在下面body标签里使用P标签时则会继承这些设置。</p>]]></content>
      
      
      <categories>
          
          <category> css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记二</title>
      <link href="/yangpaul123.github.io/2021/02/08/HTML%E7%AC%94%E8%AE%B0%E4%BA%8C/"/>
      <url>/yangpaul123.github.io/2021/02/08/HTML%E7%AC%94%E8%AE%B0%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><p>要点：src进行调用时，”..”可以返回上一级。</p><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h2 id="一、HTML标签的属性"><a href="#一、HTML标签的属性" class="headerlink" title="一、HTML标签的属性"></a>一、HTML标签的属性</h2><h3 id="1、通用属性"><a href="#1、通用属性" class="headerlink" title="1、通用属性"></a>1、通用属性</h3><p>id: 用来给标签取一个唯一的名称。</p><p>class：给标签取一个类名。</p><p>style：用来设置该标签的行列样式。</p><p>title：提示。</p><h3 id="2、自定义属性"><a href="#2、自定义属性" class="headerlink" title="2、自定义属性"></a>2、自定义属性</h3><p>格式：data-*</p><p>作用：通常用来传值和图片的懒加载。</p><p>懒加载：<code>&lt;img data-src=&quot;图片地址&quot; alt=&quot;提示&quot;/&gt;</code>    </p><p>传值：<code>&lt;p data-id=&quot;goodsid&quot;&gt;...&lt;/p&gt;</code></p><h2 id="二、表格的绘制"><a href="#二、表格的绘制" class="headerlink" title="二、表格的绘制"></a>二、表格的绘制</h2><h3 id="1、绘制基本表格"><a href="#1、绘制基本表格" class="headerlink" title="1、绘制基本表格"></a>1、绘制基本表格</h3><p>格式： </p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> <span class="comment">&lt;!--行--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span><span class="comment">&lt;!--列--&gt;</span><span class="comment">&lt;!--表头有自动加粗功能--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span> </span><br><span class="line">        <span class="tag">&lt;<span class="name">tb</span>&gt;</span><span class="tag">&lt;/<span class="name">tb</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tb</span>&gt;</span><span class="tag">&lt;/<span class="name">tb</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tb</span>&gt;</span><span class="tag">&lt;/<span class="name">tb</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>表格属性：</p><p><img src="U%7DH0%5DE5T%607%7DWDB9LBQ%60%7BQYF.png"></p><p><code>cellspacing可以使表格变成单线</code></p><p><code>align可以使表格居中或左右，参数有：left,center,right</code></p><p><code>valign使表格在垂直方向居中或左右，参数：bottom,top,middle</code></p><p><code>bordercolor:修改边框颜色。</code></p><h3 id="2、表格的跨行跨列"><a href="#2、表格的跨行跨列" class="headerlink" title="2、表格的跨行跨列"></a>2、表格的跨行跨列</h3><p> rowspan:跨行</p><p> colspan:跨列</p><p>代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span> <span class="attr">width</span>=<span class="string">&quot;500&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span>内容1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">td</span>&gt;</span>内容3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果展示：<img src="/image-20210208173003778.png" alt="image-20210208173003778"></p><h3 id="3、完整表格的组成"><a href="#3、完整表格的组成" class="headerlink" title="3、完整表格的组成"></a>3、完整表格的组成</h3><p>caption（标题）、thead（）、tbody（）、tfoot（）</p><p>完整表格memset语法：</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">table[border&#x3D;1 width&#x3D;600 align&#x3D;center]&gt;(caption&#123;学生信息表&#125;)+(thead&gt;tr&gt;th*3)+(tbody&gt;tr&gt;td*3)+(tfoot&gt;tr&gt;td*3)</span><br></pre></td></tr></table></figure><p><code>内容和属性可分别用&#123;&#125;与[]扩充</code>。</p><h3 id="4、form表单标签"><a href="#4、form表单标签" class="headerlink" title="4、form表单标签"></a>4、form表单标签</h3><p>用来实现前后端交互的重要标签。</p><h4 id="1-常用属性"><a href="#1-常用属性" class="headerlink" title="1.常用属性"></a>1.常用属性</h4><p>​        name：表单名称</p><p>​        action：表单数据提交到哪里去（通常是一个后台文件名（.jsp/.php/.asp/.aspx/.py）或网址)。如果是#，表示提交到当前文件。</p><p>​        method:前端提交数据到后端的方法，主要有get和post，默认为get。</p><p>​        placeholder:文本框里提示输入的内容。</p><p>代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">&quot;stuInfo&quot;</span> <span class="attr">action</span>=<span class="string">&quot;#&quot;</span> <span class="attr">method</span>=<span class="string">&quot;get&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">name</span>=<span class="string">&quot;userName&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;请输入你的姓名&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><p>效果：<img src="LH695%7D%7B5W3%5DW%7B_KBA~QW%7BOD.png"></p><h4 id="2-表单元素"><a href="#2-表单元素" class="headerlink" title="2.表单元素"></a>2.表单元素</h4><p>​    input:主要用来完成输入。</p><p>​    type参数：<img src="/DK_LHOV8OAVZ%5B%5BAATVPB%60D4.png"></p><p>​        a、text属性：    placeholder/name(传输后台区分表单)/minlength/maxlength（最大最小输入长度）/disabled/readonly（只读）/value（默认值）/pattern（正则匹配）</p><p>​        b、password：与text的属性相同</p><p>​        C、radio：单选钮，通常是两项以上。常用属性有：name（必须要有）/disabled/readonly（只读）/value（默认值）/checked(选中) </p><p>代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span> <span class="attr">checked</span>&gt;</span>男</span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;radio&quot;</span> <span class="attr">name</span>=<span class="string">&quot;sex&quot;</span>&gt;</span>女</span><br></pre></td></tr></table></figure><p>​        D、checkbox:多选，name（必须要有）/disabled/readonly（只读）/value（默认值）/checked(选中) </p><p>​        E、file：文件上传。</p><p>​        F、button：普通按钮。通常用它调用脚本代码。属性：value（按钮的标题）/disable（失效）</p><p>​        G、image：图片按钮。用法与button相同。有个特殊属性src（用它替换了value），也有提交功能。</p><p>​        H、submit：提交按钮，用来将表单数据提交到后台。</p><p>​        J、reset：重置按钮。将表单所有组件输入的内容全部清空。</p><p>​    textarea: 文本域。（多行文本框），主要用来输入大量的内容。</p><p>​    常用属性：name/id/cols/rows/placeholder/minlength/maxlength/required(必须输入)/value</p><p>​    select:下拉列表框，默认用于单项选择。用option呈现每个选项。默认被选中为  selected</p><p>​    常用属性：multiple(多选)/size（调整选项展示个数。）</p><p>​    代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;sex&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>  <span class="attr">id</span>=<span class="string">&quot;sex&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;male&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;female&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    效果：<img src="/P9B%5D%7B9QSEZVC6W2CFKPUHFR.png"></p><p>​    button: 普通按钮，具有提交功能。可以单独使用，可以不写在form元素中，写在form中具有提交功能。</p><h3 id="5、iframe框架标签"><a href="#5、iframe框架标签" class="headerlink" title="5、iframe框架标签"></a>5、iframe框架标签</h3><p>​    iframe：框架集，用来将多个网页文件组合成一个文件。</p><p>​    常用属性：</p><p>​                name:框架名。</p><p>​                src:引入的外部html文件。</p><p>​                scrolling:滚动条。（参数yes/no/auto）</p><p>​                width:宽度(%/px)</p><p>​                height:高度(同上)</p><p>​                frameborder:是否有边框(1/0)</p><p>​                marginheiht:框架高度(%/px)</p><p>​                marginwidth:框架宽度(%/px)</p><p>​    注意：在实际开发中，尽量减少使用iframe，因为它破坏前进和后退功能，且不利于SEO。</p><p>​    代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">name</span>=<span class="string">&quot;main&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;auto&quot;</span> <span class="attr">width</span>=<span class="string">&quot;100%&quot;</span> <span class="attr">height</span>=<span class="string">&quot;300px&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;0&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​    假设nav导航区点击标题，使内容在content区域显示，需要在超链接中加入属性 target=”main” ，这里的main为iframe框的name名。</p><p>​    代码：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;content.html&quot;</span> <span class="attr">target</span>=<span class="string">&quot;main&quot;</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTML笔记一</title>
      <link href="/yangpaul123.github.io/2021/02/08/HTML%E7%AC%94%E8%AE%B0%E4%B8%80/"/>
      <url>/yangpaul123.github.io/2021/02/08/HTML%E7%AC%94%E8%AE%B0%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h1><h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h2 id="一、HTML概述"><a href="#一、HTML概述" class="headerlink" title="一、HTML概述"></a>一、HTML概述</h2><p><img src="HTML%E6%A6%82%E8%BF%B0.png"></p><p><code>要点：标签开头与结尾的格式：&lt;div&gt;....&lt;/div&gt;反斜杠不能忘。</code></p><h2 id="二、主流浏览器以及对应内核"><a href="#二、主流浏览器以及对应内核" class="headerlink" title="二、主流浏览器以及对应内核"></a>二、主流浏览器以及对应内核</h2><p>1.Trident内核：IE浏览器。WIN10的Edge浏览器。</p><p>2.Blink内核：Google&amp;Opera浏览器。安卓4.4以后也使用该内核。</p><p>3.Gecko内核：火狐浏览器。C++编写排版。</p><p>4.WebKit：苹果的Safari。安卓4.4以下采用webkit。</p><p>常用开发工具：sublime,Hbuilder,VScode,atom,webstorm</p><h2 id="三、HTML标签与主体结构"><a href="#三、HTML标签与主体结构" class="headerlink" title="三、HTML标签与主体结构"></a>三、HTML标签与主体结构</h2><h3 id="1、结构"><a href="#1、结构" class="headerlink" title="1、结构"></a>1、结构</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span><span class="comment">&lt;!--完成网页的相关设置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><span class="comment">&lt;!--汉字编码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="comment">&lt;!--网站搜索关键字--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;description&quot;</span> <span class="attr">content</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="comment">&lt;!--网站的描述内容--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>我的第一个网页<span class="tag">&lt;/<span class="name">title</span>&gt;</span><span class="comment">&lt;!--标题--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--图标--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;shortcut icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;favicon.ico&quot;</span> <span class="attr">type</span>=<span class="string">&quot;image/x-icon&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line">        /*书写样式/</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span><span class="comment">&lt;!--引入外部样式文件--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span><span class="comment">&lt;!--主体--&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">    <span class="comment">//脚本代码</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2、基本标签"><a href="#2、基本标签" class="headerlink" title="2、基本标签"></a>2、基本标签</h3><p>1.<code>&lt;div&gt;</code>：分层。</p><p>2.<code>&lt;hx&gt;</code>:标题。1~6级。用法：<code>&lt;h1&gt;...&lt;h1&gt; &lt;h6&gt;...&lt;h6&gt;</code></p><p>3.<code>&lt;p&gt;</code>:表示段落。相当于回车。</p><p>4.<code>br</code>：换行，单标签。</p><p>5.<code>&lt;hr/&gt;</code>: 生成一条水平线。起装饰作用，单标签。</p><p>设置：<code>&lt;hr width=&quot;80%&quot; align=&quot;center&quot; color=&quot;red&quot; height=&quot;2px&quot; /&gt;</code></p><p>6.<code>&lt;a&gt;</code>:用作超级链接。 用法:<code>&lt;a href=&quot;http://baidu.com&quot; title=&quot;百度&quot; target=&quot;_blank &quot;&gt;</code>百度<code>&lt;/a&gt;</code> target使用的参数功能。</p><p><img src="%E8%B6%85%E9%93%BE%E6%8E%A5%E5%8F%82%E6%95%B0.png"></p><p>7.<code>&lt;img&gt;</code>:用来加载图片。src:用来加载图片的路径。用法<code>&lt;img src=&quot;C:\Users\Administrator\Desktop\url&quot; alt=&quot;商品&quot;&gt;</code>   alt在图片加载不成功时会有个标识。title可以有个提示文字。</p><p>8.<code>&lt;span&gt;</code> ：与div一样，起分割的作用。但div会占一行，span则不会。</p><p>9.<code>&lt;ul/ol&gt;</code>:前者是无序列表，后者为有序。列表内容为li标签。</p><p>语法：ul&gt;li{li$}*3    $可以在生成时出现123序号。</p><p>区别展示：<img src="ul&ol%E5%8C%BA%E5%88%AB.png"></p><p>10.注释的快捷键为: ctrl+shift+/</p><h3 id="3、标签属性"><a href="#3、标签属性" class="headerlink" title="3、标签属性"></a>3、标签属性</h3><p>要点：不是所有标签都有属性，比如br。</p><p>1.title:提示。</p><p>2.class:类名。</p><p>3.id：号。</p><h3 id="4、文本格式化标签"><a href="#4、文本格式化标签" class="headerlink" title="4、文本格式化标签"></a>4、文本格式化标签</h3><p>1.<code>&lt;b&gt;</code> :加粗文本。</p><p>2.<code>&lt;strong&gt;</code>:加粗文本。但strong还有强调作用。强调用于SEO引擎搜索，提取关键字。</p><p>3.<code>&lt;i&gt;和&lt;em&gt;</code>：使文字倾斜。em具有强调作用。</p><p>4.<code>&lt;pre&gt;</code>:预格式化文本。用的比较少。用处：保留文本里的空格与回车，且文字的字号会小一号。</p><p>5.<code>&lt;small&gt;</code>和<code>&lt;big&gt;</code>可以缩小或放大一号文字。big在html5中被淘汰了，但没有删除。PS：浏览器支持的最小字号为12号字，要想显示更小的，需做处理。</p><p>6.<code>&lt;sub&gt;</code>和<code>&lt;sup&gt;</code>:设置文本下标和上标。</p><p>用法：<img src="%E4%B8%8B%E6%A0%87%E4%B8%8A%E6%A0%87%E7%94%A8%E6%B3%95.png"></p><p>展示：<img src="%E4%B8%8B%E6%A0%87%E4%B8%8A%E6%A0%87%E5%B1%95%E7%A4%BA.png"></p><h3 id="5、单双标签分类"><a href="#5、单双标签分类" class="headerlink" title="5、单双标签分类"></a>5、单双标签分类</h3><p>单标签 ：<img src="%E5%8D%95%E6%A0%87%E7%AD%BE%E6%B1%87%E6%80%BB.png"></p><p>双标签：<img src="%E5%8F%8C%E6%A0%87%E7%AD%BE%E6%B1%87%E6%80%BB.png"></p><h3 id="6、实体转义字符"><a href="#6、实体转义字符" class="headerlink" title="6、实体转义字符"></a>6、实体转义字符</h3><p><img src="%E5%AE%9E%E4%BD%93%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png"></p><h3 id="7、块级元素与行级元素"><a href="#7、块级元素与行级元素" class="headerlink" title="7、块级元素与行级元素"></a>7、块级元素与行级元素</h3><p>块级元素：div   p  hx ul ol pre table address  PS:块级元素占满整行，且可调整长宽。</p><p>行级元素: strong  span a b i em img sup sub  PS:行级元素不会占满整行，且不可调整宽度。img属于行级块标签，可识别宽高，相当于执行了display:block操作。</p><p>代码：<img src="%E5%9D%97%E7%BA%A7%E4%B8%8E%E8%A1%8C%E7%BA%A7%E4%BB%A3%E7%A0%81.png"></p><p>效果:</p><p><img src="%E5%9D%97%E7%BA%A7%E4%B8%8E%E8%A1%8C%E7%BA%A7%E7%9A%84%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA.png"></p><p>块级标签转换为行级标签：需要在style样式里加入代码  display:inline  </p><p>块级标签转换为行级标签：需要在style样式里加入代码</p><p>display:block</p><h3 id="8、W3C规范"><a href="#8、W3C规范" class="headerlink" title="8、W3C规范"></a>8、W3C规范</h3><p><img src="w3c%E8%A7%84%E8%8C%831.png"></p><p><img src="w3c%E8%A7%84%E8%8C%832.png"></p><h3 id="9、表格标签"><a href="#9、表格标签" class="headerlink" title="9、表格标签"></a>9、表格标签</h3><p>table[border=1]&gt;caption{学生信息表}+tr&gt;th*3</p><p>效果：<img src="%E8%A1%A8%E6%A0%BC%E4%BB%A3%E7%A0%81%E5%B1%95%E7%A4%BA.png" alt="image-20210208004751373"></p><p>tr&gt;td*3  </p><p>效果：<img src="%E8%A1%A8%E6%A0%BC%E7%BD%91%E9%A1%B5%E5%B1%95%E7%A4%BA.png"></p><h3 id="10、文件命名规范"><a href="#10、文件命名规范" class="headerlink" title="10、文件命名规范"></a>10、文件命名规范</h3><p>文件和目录不允许出现中文和空格等其他字符，可以是字母和下划线开头。</p><p>文件名：index.html(首页)   project.html(产品页)  order.html(订单页)</p><p><img src="%E6%96%87%E4%BB%B6%E5%91%BD%E5%90%8D%E8%A7%84%E8%8C%83.png"></p>]]></content>
      
      
      <categories>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
